name: Deploy to Amazon ECR Spring

on:
  push:
    paths:
      - 'FPBoot-deploy/**'

  pull_request:
      paths:
      - 'FPBoot-deploy/**'
 

jobs:
  
  build:
    
    name: Build Image
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:latest
        env:
          # optional (defaults to `postgres`)
          POSTGRES_DB: final_project
          # required
          POSTGRES_PASSWORD: bigdata
          # optional (defaults to `5432`)
          POSTGRES_PORT: 5432
          # optional (defaults to `postgres`)
          POSTGRES_USER: bigdata
        ports:
          # maps tcp port 5432 on service container to the host
          - 5432:5432
        # set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
   
    steps:

    - name: Check out code
      uses: actions/checkout@v3
      
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v2
      
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
      
    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'
        cache: maven
    - name: Build with Maven
      run: mvn -B package --f ./FPBoot-deploy/pom.xml
      
    - name: Login to GitHub Container Registry
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.repository_owner }}
        password: ${{ secrets.TOKEN_CONTAINER }}

    - name: Build, tag, and push image to Github CR
      run: |
        docker buildx build --file ./docker/spring/Dockerfile --platform linux/arm64 -t ghcr.io/${{ github.repository_owner }}/spring:latest --push --no-cache .
