
name: Deploy to Amazon ECR Python

on:
  push:
    paths:
      - 'Python-deploy/**'

  pull_request:
      paths:
      - 'Python-deploy/**'
 

jobs:
  
  build:
    
    name: Build Image
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        python-version: ["3.8"]
        
    
   
    steps:
    
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install pytest
        pip install -r ./Python-deploy/requirements.txt
    - name: Test with pytest
      run: |
        python ./Python-deploy/test_fuc.py

    - name: Check out code
      uses: actions/checkout@v3
      
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v2
      
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
    
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ap-northeast-2

    - name: Login to GitHub Container Registry
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.repository_owner }}
        password: ${{ secrets.TOKEN_CONTAINER }}

    - name: Build, tag, and push image to  to Github CR
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: docker-python
        IMAGE_TAG: python_image
      run: |
        docker buildx build --file ./docker/spring/Dockerfile --platform linux/arm64 -t ghcr.io/${{ github.repository_owner }}/flask:latest --push --no-cache .
